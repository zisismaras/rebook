module.exports = function(app) {
    var path = require('path');
    var models = require(path.resolve(__dirname, '../model-config.json'));
    var datasources = require(path.resolve(__dirname, '../datasources.json'));
    
    function autoMigrateAll(){
        Object.keys(models).forEach(function(key) {
            if (typeof models[key].dataSource != 'undefined') {
                if (typeof datasources[models[key].dataSource] != 'undefined') {
                    //keep the token while developing so we don't have to relogin
                    //after every node restart
                    if (key !== "AccessToken") {
                        app.dataSources[models[key].dataSource].automigrate(key, function (err) {
                            if (err) throw err;
                            console.log('Model ' + key + ' migrated');
                            if(key==='user')       { addUsers();  console.log("Add data for "+key); }
                            if(key==='folder')      { addFolders();  console.log("Add data for "+key); }
                            if(key==='bookmark')      { addBookmarks();  console.log("Add data for "+key); }
                            if(key==='team')        { addTeams();  console.log("Add data for "+key); }
                            if(key==='folderBookmark')        { addFolderBookmarks();  console.log("Add data for "+key); }
                        });
                    }
                }
            }
        });
    }
    
    function addUsers() {
        app.models.user.create({
            username: "user1", password: "user1", firstname: "user1", lastname: "user1", email: "user1@users.com", teamId: 1
        });
    }
    
    function addTeams() {
        app.models.team.create({
            name: "team1"
        });        
    }
    
    function addFolders() {
        app.models.folder.create([
            { name: "Important", description: "Must read!",  teamId: 1  },
            { name: "Company news", description: "Our company\'s news", teamId: 1 },
            { name: "Off topic", description: "Anything goes", teamId: 1 }
        ]);
    }
    
    function addBookmarks() {
        app.models.bookmark.create([
            { 
                name: "Koding’s Global Virtual Hackathon is now part of hack.summit ", url: "https://www.koding.com/blog/kodings-global-virtual-hackathon-is-now-part-of-hack.summit",
                except: "Ed Roman, Founder of hack.summit(), asked me this question on a sunny San Francisco morning,<br><br>“What makes more sense than the largest virtual developer conference coming together with the largest virtual hackathon?”",
                content: "<br><br>Ed Roman, Founder of hack.summit(), asked me this question on a sunny San Francisco morning,<br><br>“What makes more sense than the largest virtual developer conference coming together with the largest virtual hackathon?”<br><br>And the adventure began. Could we bring the world’s largest virtual hackathon, Koding Global Virtual Hackathon, under the umbrella of the world’s largest developer event, hack.summit()? Together, we decided to make it happen.<br><br>Today we are proud to announce that Koding’s Global Virtual Hackathon is is now a part of hack.summit(). hack.summit() is the world’s largest developer conference that unites the world’s most renowned programming language creators, open-source contributors, and thought leaders to raise money for nonprofits in the programming space. It’s an independent entity that doesn’t promote a company or a partner but raises money for organizations that empower coders around the world. At Koding, we are very excited to use the platform we’ve built to contribute to the greater good.<br><br><img src=\"//no-cache.hubspot.com/cta/default/1593820/26cadf13-3d39-443c-8a34-f8f6820fc2d0.png\" class=\"responsive-img\"></img><br><br>On February 20-21, Koding will be used by thousands of developers around the world, hacking together to solve problems, benefit non-profits, and take a shot at winning the $100,000 grand prize. During the week of February 22, dozens of speakers will present at hack.summit() to share their experiences in the field, expertise and anecdotes to educate and inspire coders of all levels. The hackathon winners will selected during a live judging panel at hack.summit().&nbsp;We invite you to join us&nbsp;for both events, now that are finally now one.<br><br>Dozens of speakers will present about their experiences in the field, sharing insights and anecdotes to educate and inspire coders of all levels. Last year’s hack.summit() had 64,000 developers register, making the largest virtual conference ever created, and the largest programming conference ever created (physical or virtual). &nbsp;The hack.summit() mission is to raise money for organizations that empower developers, and promote mentorship in the programming community via lectures from some of the brightest minds in the industry.<br><br>And this is only the beginning...Koding and hack.summit() will continue our partnership into the future with a series of developer events and hackathons. &nbsp;",
                favicon:"https://google.gr/favicon.ico",
                teamId: 1, folderId: 1, id:1, notes: "I am in."
            },
            { 
                name: "GitHub Enterprise 2.5 is now available · GitHub", url: "https://github.com/blog/2108-github-enterprise-2-5-is-now-available",
                except: "We are excited to announce the release of GitHub Enterprise 2.5. With this release, we’re introducing features and updates that will help development teams build software at scale with a focus on scalability, security, and management of GitHub Enterprise for development teams of any size.<br><br>It's important that your GitHub Enterprise instance can support the way you work without skipping a beat, even if your team is 10,000 strong and growing exponentially. In this release, we're introducing a better way to add new users to large installations, more ways to collaborate safely, and other tools and updates that will help support your team as it gets bigger.",
                content: "<br><br>We are excited to announce the release of GitHub Enterprise 2.5. With this release, we’re introducing features and updates that will help development teams build software at scale with a focus on scalability, security, and management of GitHub Enterprise for development teams of any size.<br><br>It's important that your GitHub Enterprise instance can support the way you work without skipping a beat, even if your team is 10,000 strong and growing exponentially. In this release, we're introducing a better way to add new users to large installations, more ways to collaborate safely, and other tools and updates that will help support your team as it gets bigger.<br><br>You'll also find a round of updates from a clean and simple design refresh to added support for Subversion, and more. Ready to upgrade? Download GitHub Enterprise 2.5.<br><br>As your team grows, so does your GitHub Enterprise installation. For our customers with teams of tens of thousands of developers, the 2.5 release introduces clustering—a framework that helps administrators add more users to large installations.<br><br><img src=\"https://cloud.githubusercontent.com/assets/2515203/12905018/a977ced6-cea1-11e5-82e9-b7cc2abce638.png\" class=\"responsive-img\"></img><br><br>Clustering was specifically designed for very large installations but requires some additional administrative resources. Check out the documentation to see how it works or contact your GitHub account manager to discuss scaling options.<br><br>For teams working on bigger software projects, large CI farms or similar collections of clients that perfom git fetch for large amounts of data at almost the same time can cause a substantial CPU and RAM load on our fileservers. With GitHub Enterprise 2.5, we have improved our resilience to the degraded performance that can happen with \"thundering herds.\"<br><br>GitHub Enterprise 2.4 included Protected Branches and Required Statuses to help teams collaborate safely: When you protect a branch, other developers can't delete or force-push to it. You can also specify status checks that collaborators need to pass before merging a pull request.<br><br>With GitHub Enterprise 2.5, we are kicking off a preview period for the Protected Branches API—allowing instance administrators to help maintain a project’s conventions at scale and make sure no one loses any work.<br><br>Protected branches and required status checks are configurable per repository. To start using the API, check out the documentation.<br><br>When you upgrade to GitHub Enterprise 2.5, parts of GitHub will look different. The repository and sign-in screens have updated designs that will make it easier to sign in and use GitHub from your browser.<br><br>The new repository design improves navigation, simplifies the page layout, and improves code performance under the hood. You can learn more about what's changed from our recent blog post on the new design. In the meantime, here’s a summary:<br><br>The collapsing side menu is now a single, always present navigation, which improves accessibility and frees up more space for what matters to you—issues and pull requests.\nThe Code tab now more prominently emphasizes cloning and comes with a redesigned protocol switcher containing explicit menu items with explanatory text for each cloning method.<br><br>In addition to updating how repositories look, we have simplified the sign-in and authentication screens, so you can access your account more efficiently. The sign-up screen also includes a clearer sign-up link for new developers on your team who do not have a GitHub account, yet.<br><br>For teams who use SVN commands to interact with their repositories, the latest version of GitHub Enterprise extends support for Subversion to versions 1.8 and 1.9. You can now use newer Subversion clients with GitHub, including features from 1.8 and 1.9.<br><br>Check out the release notes to see what else is new or download GitHub Enterprise 2.5 now. You can also enable update checks to automatically update your instance whenever there is a new release.",
                favicon:"https://google.gr/favicon.ico",
                teamId: 1, folderId: 1, id:2
            },
            { 
                name: "9 technologies that will shake up the startup world in 2016", url: "http://thenextweb.com/insider/2016/02/21/9-technologies-will-shake-startup-world-2016",
                content: "<br><br>1 Day  left: TNW Europe early bird sales end soon.Learn more!<br><br>2015 introduced us to many new, exciting technologies. Advances in virtual reality and the widening adoption of smartwatches and other wearables are only the beginning. To get a started on what could shape the way we think in the coming year, I polled nine savvy business owners from YEC on the following:<br><br>Their best answers are below:<br><br>1. Google’s Project Loon<br><br>Almost 4.3 billion people who live in rural areas will soon have Internet thanks to Google’s Project Loon. Sometime over the next year, Google will begin flying their large, clear, helium-filled balloons in areas with little-to-no Internet or mobile reception. The solar-powered electronics contained within these balloons will beam down high-speed cellular Internet coverage, bringing nearly 60 percent of the world’s population online for the first time.   – Jessica Oralkan, Collecteurs<br><br>2. Accelerated mobile pages project (AMP project)<br><br>Google is leading the charge in building a new mobile framework for speed. This would allow publishers to deliver their content natively inside any app, lightning fast. Media companies like BBC, The Guardian, BuzzFeed, Time Magazine, The Wall Street Journal and several others are already on board. This is a big win for publishers, but even more importantly for users, because it will significantly improve the overall user experience. – Syed Balkhi, OptinMonster<br><br>3. Mobile payments<br><br>Although introduced much earlier than 2015, we’re finally starting to see a surge in support for mobile payments, with Apple, Android and now Microsoft making mobile payments easier and more accessible to the non-savvy consumer. Using the Apple Watch, iPhone, Microsoft’s new smart watch solution, or any of the numerous Android devices that support these technologies, we’re finally seeing consumers make the choice to keep their cards in their pockets, or better yet, at home. – Blair Thomas, EMerchantBroker<br><br>4. Live streaming<br><br>The release of Blab.im, Periscope and Meerkat have all reduced friction enough that online live streaming is finally taking off. Ustream and Google hangouts have been around for five or six years but aren’t mobile specific. I see a huge trend for businesses to offer live Q&A sessions to better connect with clients and potential clients using these platforms that satisfy people’s on-the-go mobile preference. – Joshua Lee, StandOut Authority<br><br>5. Virtual Reality showrooms<br><br>Virtual reality (VR) technology being released by Oculus Rift , Microsoft and Sony — as well as VR creation tools from Nokia and GoPro — will change the way consumers shop. As web purchasing increases in 2016, VR Showrooms linked from commercial websites will allow consumers to view products in a similar way as they would a physical showroom, and without leaving the comfort of their home. – Peter Bonac, Bonac Innovation Corp.<br><br>6. Wearables<br><br>In 2016 we are going to see a lot more implementation of wearables in the workplace. In 2015, we saw enterprise adopt more cloud-based platforms such as Salesforce as well as more mobile apps and tools for employees. In 2016, with 1.9 billion devices contributing to the Internet of Things,  wearable solutions such as Google Glass for enterprise, smartwatches like Apple Watch and wearable controls like Myo will be tested in the workplace. Deep analytics generated by these devices will help businesses make their processes smarter, which will lead to a happier and more productive workforce. – Ankur Gopal, Interapt<br><br>7. Home batteries<br><br>Tesla home batteries, a wall battery that charges using electricity generated from solar panels (or when utility rates are low), lets you power your office in the evenings and fortifies offices against power outages by providing a backup electricity supply. Electricity storage has been a huge problem for a long time, which is why it’s taken so long for solar power to take off. There simply hasn’t been a good way to store the excess power generated. But now, Tesla batteries are being used to power office buildings in California, and they’ll soon be installed all over the US. –Mattan Griffel, One Month<br><br>8. Amazon Dash<br><br>I consider this button a very early version of a product that would change how advertisers would target consumers. Currently, the whole process is not very sophisticated technologically. But imagine a world where machines can directly place orders for you based on your product consumption trends, and advertisers give you coupons not on your mobile or desktop but on your actual machines. Amazon has started something that would lead to many more devices that an advertiser could target consumers on. – Shilpi Sharma, Kvantum Inc.<br><br>9. Twitter content in Google<br><br>With the recent deal in place with Twitter, Google has gained access to crawl the vast database of Twitter’s real-time content. Expect further integration of Twitter content into search engine results pages (SERP) in 2016, with an emphasis on news and events. Tweets and Twitter profiles present opportunities for businesses to get on top of Google and win more real estate with a sound Twitter strategy. News content is an obvious win, but businesses should also optimize for hashtags, which are increasingly used as keywords. With the descending influence of G+ on SERP, Twitter is a platform to watch. – Matthew Capala, Search Decoder<br><br>Read next: Why you won’t recognize SEO in 5 years<br><br>Image credit: Giphy<br><br>Tweet 345      Share 0      Share 198       Email", 
                except: "1 Day  left: TNW Europe early bird sales end soon.Learn more!<br><br>2015 introduced us to many new, exciting technologies.:",
                favicon:"https://google.gr/favicon.ico",
                teamId: 1, folderId: 2, id:3, notes: "some useful notes"
            },
            { 
                name: "Art Play Σ’ εσάς που με ακούτε.. 12 χρόνια μετά", url: "http://www.artplay.gr/theatro/s-esas-pou-me-akoute-12-chronia-meta",
                content: "<br><br>Το έργο της Λούλας Αναγνωστάκη «Σ΄εσάς που με ακούτε» ανεβαίνει από τις 29 Φεβρουαρίου σε σκηνοθεσία Μάνου Καρατζογιάννη σε έναν δεύτερο κύκλο παραστάσεων στο Σημείο.<br><br>Έπειτα από την επιτυχημένη ολοκλήρωση του μεγάλου αφιερώματος «2015 ΣΤΗΝ ΠΟΛΗ ΤΗΣ ΛΟΥΛΑΣ ΑΝΑΓΝΩΣΤΑΚΗ» που πραγματοποιήθηκε στο Ίδρυμα Μιχάλης Κακογιάννης το Δεκέμβριο του 2015, με αφορμή τα 50 χρόνια της συγγραφέως στο θέατρο και 12 χρόνια μετά το πρώτο ανέβασμα του «Σ΄εσάς που με ακούτε» από το Λευτέρη Βογιατζή και τη Νέα Σκηνή, ο ηθοποιός και σκηνοθέτης Μάνος Καρατζογιάννης επανέρχεται με το ίδιο έργο<br><br>Σε ένα παλιό βερολινέζικο σπίτι, που σταδιακά ταράζεται από τον ήχο των επεισοδίων, τις ριπές και τα δακρυγόνα, ο κεντρικός ήρωας, ο Άγης, ηχογραφεί τις φωνές των υπόλοιπων θεατρικών προσώπων και τις μοντάρει με συνθήματα από τις διαδηλώσεις. Το ιδιωτικό μπλέκεται με το δημόσιο για να επανεμφανισθούν υπαινικτικά στη σκηνή θέματα και χαρακτήρες από παλαιότερα έργα της συγγραφέως. Χαρακτήρες που παίρνουν υπόσταση κρατώντας ένα μικρόφωνο σα να μιλούν σε μια συγκέντρωση ξεχωρίζοντας από το πλήθος της διαδήλωσης, «σ’ εμάς που τους ακούμε».<br><br>Πρόκειται για μια διαμαρτυρία για τα κοινωνικά, πολιτικά και ατομικά αδιέξοδα που μαστίζουν τις σύγχρονες κοινωνίες. Η συγγραφέας δίνει φωνή στα πρόσωπα του έργου για να εκμυστηρευτούν σε ένα φανταστικό κοινό τις αγωνίες τους, τον τρόμο τους απέναντι στη νέα τάξη πραγμάτων, αλλά και την προσωπική ανασφάλεια, που τους προκαλεί η κοινωνική διαφθορά και παρακμή.\nΣΥΝΤΕΛΕΣΤΕΣ\nΣκηνοθεσία: Μάνος Καρατζογιάννης\nΚοστούμια: Βασιλική Σύρμα\nΣκηνικά: Γιάννης Αρβανίτης\nΕπιμέλεια κίνησης: Ζωή Χατζηαντωνίου\nΦωτισμός: Κατερίνα Μαραγκουδάκη\nΦωτογραφίες: Σωτηρία Ψαρού\nTrailer: ‘Αλεξ Τριανταφύλλου<br><br><img src=\"http://www.artplay.gr/wp-content/uploads/2016/02/1-S-esas-pou-me-akoute©Sotiria-Psarou-1024x681.jpg\" class=\"responsive-img\"></img><br><br>Παίζουν οι ηθοποιοί: Όλια Λαζαρίδου, Mαρία Ζορμπά, ‘Aντριαν Φρίλινγκ, Ανδρέας Κοντόπουλος, Δανάη Επιθυμιάδη, Γιάννης Καραούλης, Μάνος Στεφανάκης, Κλεοπάτρα Μάρκου, Σταύρος Γιαννακόπουλος\nΠΛΗΡΟΦΟΡΙΕΣ\nΕπίσημη πρεμιέρα: Τρίτη, 01 Μαρτίου στις 21:00\nΠαραστάσεις: από 29 Φεβρουαρίου 2016 έως 29 Μαρτίου 2016\nΗμέρες και ώρες παραστάσεων: Κάθε Δευτέρα και Τρίτη στις 21:00\nΕισιτήριο: 12 € γενική είσοδος, 10 € ατέλεια &amp; ανέργων\nΔιάρκεια: 90 λεπτά\nΧώρος: Θέατρο Σημείο (κεντρική αίθουσα)\nΔιεύθυνση: Χαριλάου Τρικούπη 4 (πίσω από το Πάντειο), Καλλιθέα\nΤηλέφωνο κρατήσεων: 210.9229579", 
                except: "Το έργο της Λούλας Αναγνωστάκη «Σ΄εσάς που με ακούτε» ανεβαίνει από τις 29 Φεβρουαρίου σε σκηνοθεσία Μάνου Καρατζογιάννη σε έναν δεύτερο κύκλο παραστάσεων στο Σημείο.<br><br>Έπειτα από την επιτυχημένη ολοκλήρωση του μεγάλου αφιερώματος «2015 ΣΤΗΝ ΠΟΛΗ ΤΗΣ ΛΟΥΛΑΣ ΑΝΑΓΝΩΣΤΑΚΗ» που πραγματοποιήθηκε στο Ίδρυμα Μιχάλης Κακογιάννης το Δεκέμβριο του 2015, με αφορμή τα 50 χρόνια της συγγραφέως στο θέατρο και 12 χρόνια μετά το πρώτο ανέβασμα του «Σ΄εσάς που με ακούτε» από το Λευτέρη Βογιατζή και τη Νέα Σκηνή, ο ηθοποιός και σκηνοθέτης Μάνος Καρατζογιάννης επανέρχεται με το ίδιο έργο",
                favicon:"https://google.gr/favicon.ico",
                teamId: 1, folderId: 2, id:4, notes: "Unicode support"
            },
            { 
                name: "Upload files to your repositories · GitHub", url: "https://github.com/blog/2105-upload-files-to-your-repositories",
                content: "<br><br>You’ll soon be able to skip the command line and upload files directly to your repositories without having to leave the browser. Repository uploads will be rolling out over the next few days, so if you can’t upload yet, sit tight.<br><br>You can click the “Upload files” button in the toolbar at the top of the file tree.<br><br><img src=\"https://cloud.githubusercontent.com/assets/1369864/12961550/b9a688ea-d006-11e5-96d3-ac91097192a5.png\" class=\"responsive-img\"></img><br><br>Or, you can drag and drop files from your desktop onto the file tree.<br><br><img src=\"https://cloud.githubusercontent.com/assets/1369864/12961164/a888b59e-d004-11e5-80a6-e9f32f17c4d5.gif\" class=\"responsive-img\"></img><br><br>Once you’ve added all the files you want to upload, you can commit them directly to your default branch or create a new branch and open a pull request. This will look familiar if you’ve used the “New file” button before.<br><br>Check out the documentation for additional information on the feature.<br><br>This should make simple file additions a little quicker for new and experienced users alike. Enjoy!", 
                except: "You’ll soon be able to skip the command line and upload files directly to your repositories without having to leave the browser. Repository uploads will be rolling out over the next few days, so if you can’t upload yet, sit tight.<br><br>You can click the “Upload files” button in the toolbar at the top of the file tree.",
                favicon:"https://google.gr/favicon.ico",
                teamId: 1, folderId: 3, id:5, notes: "Dev team check this out!"
            },
            { 
                name: "Microservices in Go using Go-kit", url: "https://blog.heroku.com/archives/2016/2/19/microservices_in_go_using_go_kit",
                except: "<br><br>Go-kit is a distributed programming toolkit for building microservices. It solves the common problems encountered while building distributed systems, so you can focus on your business logic. This article starts with a bit of background on microservices, then guidance on how to get started with Go-kit, including instructions on getting a basic service up and running on Heroku.<br><br>Traditionally, web applications are built using a monolithic approach where the entire application is built, designed, deployed and maintained as a single unit.  When working with a monolithic application various problems can arise over time: it’s easy for abstractions to leak across modules, tightly coupling them; different parts of the application may need more processing power than others, forcing you to scale in unpredictable ways; changes involve building and deploying a new version of the entire application; and tests can easily become convoluted and/or take an excruciatingly long time for the full suite to run.",
                content: "Go-kit is a distributed programming toolkit for building microservices. It solves the common problems encountered while building distributed systems, so you can focus on your business logic. This article starts with a bit of background on microservices, then guidance on how to get started with Go-kit, including instructions on getting a basic service up and running on Heroku.<br><br>Traditionally, web applications are built using a monolithic approach where the entire application is built, designed, deployed and maintained as a single unit.  When working with a monolithic application various problems can arise over time: it’s easy for abstractions to leak across modules, tightly coupling them; different parts of the application may need more processing power than others, forcing you to scale in unpredictable ways; changes involve building and deploying a new version of the entire application; and tests can easily become convoluted and/or take an excruciatingly long time for the full suite to run.<br><br>A microservice based design addresses these issues. Applications designed using microservices consist of a set of several small (hence the term “micro”) services cooperating and communicating together. Separation between services is enforced by the service&#39;s external API. Each individual micro service can be scaled and deployed separately from the rest.<br><br>But where monolithic application have one source of logs, one source of metrics, one application to deploy, one API to rate limit, etc, microservice based application have multiple sources. Some of the common concerns of application design that are amplified in a microservices based application are:<br><br>Rate limiters enforce upper thresholds on incoming request throughput. Serialization is the conversion of language specific data structures to a byte stream for presentation to another system. That other system is commonly a browser (json/xml/html) or a database, among others. Logging is the time-ordered, preferably structured, output from an application and its constituent components.  Metrics are a record of the instrumented parts of your application and includes the aggregated measurements of latency, request counts, health and others. Circuit breakers prevent thundering herds thereby improving resiliency against intermittent errors. Request tracing across multiple services is an important tool for diagnosing issues and recreating the state of the system as a whole. Service discovery allows different services to find each other given known, stable names and the realities of the cloud, where individual systems come and go dynamically and when least expected.<br><br>By using a toolkit that addresses these concerns, the implementations across your services becomes standard. This reduces surface area and enforces uniformity in design allowing developers to spend more time on business logic. Go-kit is one such toolkit, comprised of a set of abstractions, encoded into different packages that provide a common set of interfaces for the developer.<br><br>Let’s make a basic service using Go-kit that keeps a running total of integers passed to it and responds with the current total. To start, we’ll add our business logic, encoded as an interface, with a concrete implementation.<br><br>Endpoints in go-kit represent a single RPC and are the fundamental building blocks of clients and servers. Our service implements our Counter interface, while the Endpoint interface is different. Adapters allow a struct that implements one interface to be used where another interface is expected, so an adapter for our service is needed so that it can be used as an endpoint.<br><br>Part of exposing a service is handling requests and responses. This is done via a pair of encoder/decoder functions which are then used by go-kit’s http transport. These methods take care of encoding to and decoding from JSON.<br><br>Middleware is used to wrap endpoints and add generic, per request functionality to the endpoint. This is done by defining a function that takes an Endpoint and returns a new Endpoint. We use middleware to add logging, metrics and rate limiting. Rate limiting is done using juju’s token bucket and go-kit’s rate limiting middleware. The service’s metric middleware increments a per request counter (request.count), which is exposed as an expvar metric. Lastly, the logging middleware outputs the request path, request id, request and response data, as well as elapsed time. The logging middleware relies on some extractor functions to extract the path and request-id from the *http.Request and add them to the context provided to the middleware and endpoints.<br><br>Deploy the complete application by clicking on the “Heroku Button” shown in the README.<br><br>Once deployed you can test the application via curl a few times (replace floating-anchorage-23443 with the name of the app you created):<br><br>$ curl  -X POST -d &#39;{&quot;v&quot;:1}&#39; &#39;https://floating-anchorage-23443.herokuapp.com/add&#39;\n{&quot;v&quot;:1}\n$ curl  -X POST -d &#39;{&quot;v&quot;:2}&#39; &#39;https://floating-anchorage-23443.herokuapp.com/add&#39;\n{&quot;v&quot;:3}\n$ curl  -X POST -d &#39;{&quot;v&quot;:3}&#39; &#39;https://floating-anchorage-23443.herokuapp.com/add&#39;\n{&quot;v&quot;:6}<br><br>If you execute those curl commands too fast, roughly more than 1 every 2 seconds, the rate limiting middleware will kick in and you’ll get a “rate limit exceeded” error like so:<br><br>$ curl  -X POST -d &#39;{&quot;v&quot;:1}&#39; &#39;https://floating-anchorage-23443.herokuapp.com/add&#39;\nrate limit exceeded<br><br>You can also use curl to explore the recorded metrics:<br><br>$ curl -s &#39;https://floating-anchorage-23443.herokuapp.com/debug/vars&#39;\n{\n…\n“request.count”: 4\n}<br><br>The first curl command above produces a pair of log lines similar to these (viewable with “heroku log”):<br><br>$ heroku logs\n...\n2016-02-17T05:20:43.545994+00:00 heroku[router]: at=info method=POST path=&quot;/add&quot; host=floating-anchorage-23443.herokuapp.com request_id=9c248150-03ac-4b24-b5a7-f7c1f0fb05ed fwd=&quot;76.115.27.201&quot; dyno=web.1 connect=18ms service=6ms status=200 bytes=143\n2016-02-17T05:20:43.546130+00:00 app[web.1]: path=/add request=1 result=1 err=null request_id=9c248150-03ac-4b24-b5a7-f7c1f0fb05ed elapsed=30.206µs<br><br>The latter of which is from the service’s logging middleware. The former is from the Heroku Router. A simplified form of request tracing can be achieved by ensuring that all logs across all services that comprise your application include the request id. Heroku encourages customers to drain logs for retention to a logging add-on.<br><br>This article covered a very basic app, designed to expose you to Go-kit and its patterns. Build more complex applications, deployed to Heroku Private Spaces, leveraging advanced Go-kit’s features such as: circuit breakers for limiting your exposure to problems with downstream dependencies such as external APIs; load balancers for resolving service endpoints in static and dynamic environments; and Dapper style request tracing using Zipkin.<br><br>Tags: go, gokit, microservices, golang",
                favicon:"https://google.gr/favicon.ico",
                teamId: 1, folderId: 3, id:6, notes: "Dev team check this out!"
            },
        ]);
    }
    
    function addFolderBookmarks() {
        app.models.folderBookmark.create([
            { folderId: 1, bookmarkId: 1  },
            { folderId: 1, bookmarkId: 2 },
            { folderId: 1, bookmarkId: 3 }
        ]);        
    }
    
    
    autoMigrateAll();
    
};